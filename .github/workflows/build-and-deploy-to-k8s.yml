name: Build and Deploy to k8s
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Build
      run: |
        npm install
        export NODE_ENV=production
        npm run build

    - name: Prepare for deploy
      run: |
        mkdir -p release
        rm -f release/main-*.js
        js_hash=$(cat dist/main.js | sha1sum | awk '{ print $1 }')
        cp dist/main.js "release/main-${js_hash}.js"
        cp index.html release/index.html
        sed -i "s/src=\"dist\/main\.js/src=\"main-${js_hash}\.js/g" release/index.html
        # sed -i "s/main\.js\.map/main-${js_hash}\.js\.map/g" "release/main-${js_hash}.js"
        ls -la release

    - uses: docker/setup-qemu-action@v1
      name: Set up QEMU
    - uses: docker/setup-buildx-action@v1
      name: Set up Docker Buildx
    - uses: docker/login-action@v1
      name: Login to GitHub Container Registry
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - uses: docker/build-push-action@v2
      name: Build and push
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64
        tags: ghcr.io/46bit/rtt:latest
        push: true

    - uses: azure/k8s-set-context@v1
      with:
        method: service-account
        k8s-url: ${{secrets.K8S_URL}}
        k8s-secret: ${{secrets.K8S_SECRET}}
      id: setcontext
    - name: deploy
      run: |
        kubectl apply -f ./rtt-k8s.yml
        kubectl rollout restart deployment/rtt
        kubectl rollout status deployment/rtt --timeout=600s
